Name:                gloss
Version:             1.13.2.2
License:             MIT
License-file:        LICENSE
Author:              Ben Lippmeier
Maintainer:          benl@ouroborus.net
Build-Type:          Simple
Cabal-Version:       >=1.10
Stability:           stable
Category:            Graphics
Homepage:            http://gloss.ouroborus.net
Bug-reports:         gloss@ouroborus.net
Description:
        Gloss hides the pain of drawing simple vector graphics behind a nice data type and
        a few display functions. Gloss uses OpenGL under the hood, but you won't need to
        worry about any of that. Get something cool on the screen in under 10 minutes.

Synopsis:
        Painless 2D vector graphics, animations and simulations.

source-repository head
  type:         git
  location:     https://github.com/benl23x5/gloss

source-repository this
  type:         git
  tag:          v1.13.0.0
  location:     https://github.com/benl23x5/gloss

Flag GLUT
  Description:  Enable the GLUT backend
  Default:      True

Flag GLFW
  Description:  Enable the GLFW backend
  Default:      False

Library
  Build-Depends:
          base                          >= 4.8 && < 5
        , ghc-prim
        , bmp                           == 1.2.*
        , bytestring                    >= 0.11 && < 0.13
        , containers                    >= 0.5 && < 0.8
        , gloss-rendering               == 1.13.*
        , GLUT                          == 2.7.*
        , OpenGL                        >= 2.12 && < 3.1

  ghc-options:
        -O2
        -Wall

  Default-Language:
        Haskell2010

  Exposed-modules:
        Graphics.Gloss
        Graphics.Gloss.Data.Bitmap
        Graphics.Gloss.Data.Color
        Graphics.Gloss.Data.Controller
        Graphics.Gloss.Data.Display
        Graphics.Gloss.Data.Picture
        Graphics.Gloss.Data.Point
        Graphics.Gloss.Data.Point.Arithmetic
        Graphics.Gloss.Data.Vector
        Graphics.Gloss.Data.ViewPort
        Graphics.Gloss.Data.ViewState
        Graphics.Gloss.Geometry.Angle
        Graphics.Gloss.Geometry.Line
        Graphics.Gloss.Interface.Pure.Display
        Graphics.Gloss.Interface.Pure.Animate
        Graphics.Gloss.Interface.Pure.Simulate
        Graphics.Gloss.Interface.Pure.Game
        Graphics.Gloss.Interface.IO.Animate
        Graphics.Gloss.Interface.IO.Display
        Graphics.Gloss.Interface.IO.Interact
        Graphics.Gloss.Interface.IO.Simulate
        Graphics.Gloss.Interface.IO.Game
        Graphics.Gloss.Interface.Environment

  Other-modules:
        Graphics.Gloss.Internals.Color
        Graphics.Gloss.Internals.Interface.Animate.State
        Graphics.Gloss.Internals.Interface.Animate.Timing
        Graphics.Gloss.Internals.Interface.Backend.Types
        Graphics.Gloss.Internals.Interface.Callback
        Graphics.Gloss.Internals.Interface.Common.Exit
        Graphics.Gloss.Internals.Interface.Debug
        Graphics.Gloss.Internals.Interface.Event
        Graphics.Gloss.Internals.Interface.Simulate.Idle
        Graphics.Gloss.Internals.Interface.Simulate.State
        Graphics.Gloss.Internals.Interface.ViewState.KeyMouse
        Graphics.Gloss.Internals.Interface.ViewState.Motion
        Graphics.Gloss.Internals.Interface.ViewState.Reshape
        Graphics.Gloss.Internals.Interface.Window
        Graphics.Gloss.Internals.Interface.Display
        Graphics.Gloss.Internals.Interface.Animate
        Graphics.Gloss.Internals.Interface.Interact
        Graphics.Gloss.Internals.Interface.Simulate
        Graphics.Gloss.Internals.Interface.Game
        Graphics.Gloss.Internals.Interface.Backend

  If flag(GLUT)
    CPP-Options: -DWITHGLUT
    Other-modules:
      Graphics.Gloss.Internals.Interface.Backend.GLUT

  -- NOTE: GLUT is still required for text rendering, and must be initialized
  --       on Linux platforms. Thus, the GLFW backend still requires GLUT.
  If flag(GLFW)
    Build-Depends:
      GLFW-b >= 1.4.1.0 && < 2
    CPP-Options: -DWITHGLFW
    Other-modules:
        Graphics.Gloss.Internals.Interface.Backend.GLFW

-- vim: nospell
